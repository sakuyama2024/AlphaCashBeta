# Assuming MSYS2 is used 
# export PATH=$PATH:/c/wxWidgets-3.2.5/build-debug/lib

# Compiler and flags
CXX = g++

# Default build mode
BUILD ?= debug

# Common include directories and flags from wx-config
WX_CXXFLAGS = $(shell wx-config --cxxflags)
WX_LDFLAGS = $(shell wx-config --libs)


# Common include directories
INCLUDE_DIRS = \
  -I"/mingw64/include" \
  -I"/usr/local/include/cryptopp" \

# Common flags
COMMONFLAGS = -std=gnu++2b -w -Wno-invalid-offsetof -Wformat -fexceptions -frtti -mwindows


# Debug mode settings
DEBUGFLAGS = -g -O0 -static
DEBUG_CXXFLAGS = $(COMMONFLAGS) $(DEBUGFLAGS) $(INCLUDE_DIRS) $(WX_CXXFLAGS)

# Release mode settings
RELEASEFLAGS = -O3 -static
RELEASE_CXXFLAGS = $(COMMONFLAGS) $(RELEASEFLAGS) $(INCLUDE_DIRS) $(WX_CXXFLAGS)

# Choose the appropriate flags
ifeq ($(BUILD),debug)
    CXXFLAGS = $(DEBUG_CXXFLAGS)
else ifeq ($(BUILD),release)
    CXXFLAGS = $(RELEASE_CXXFLAGS)
endif

LIBPATHS= \
  -L"/mingw64/lib" \
  -L"/usr/local/lib" \


LIBS= \
  -lcrypto -lssl \
  -lboost_system-mt -lboost_filesystem-mt \
  -ldb -ldb_cxx -lcryptopp \
  -lz -lrpcrt4 -loleaut32 -lole32 -luuid -luxtheme -lwinspool -lwinmm -lshell32 -lshlwapi \
  -lcomctl32 -lcomdlg32 -ladvapi32 -lversion -lws2_32 -lgdi32 -loleacc -lwinhttp \
  -Wl,--subsystem,windows -mwindows \
  $(WX_LDFLAGS)
  

# Header files
HEADERS = base58.h bignum.h byteswap.h common.h db.h endian.h headers.h key.h alphautil.h main.h \
market.h net.h rpc.h script.h serialize.h sha256.h ui.h uibase.h uint256.h util.h

# Source files
SRC_FILES = alphautil.cpp db.cpp init.cpp main.cpp net.cpp rpc.cpp script.cpp sha256.cpp sha256_arm_shani.cpp \
ui.cpp uibase.cpp util.cpp

# Object files
OBJS = $(SRC_FILES:.cpp=.o)

# Target to build the command line executable
alphacash: $(OBJS)
	echo $(LIBPATHS)
	echo $(LIBS)
	$(CXX) -o $@ $(OBJS) $(LIBPATHS)  $(LIBS)

# Target to build the daemon executable
alphacashd: $(OBJS)
	echo $(LIBPATHS)
	echo $(LIBS)
	$(CXX) -o $@ $(OBJS) $(LIBPATHS)  $(LIBS)

# Pattern rule for object files
%.o: %.cpp $(HEADERS)
	$(CXX) $(CXXFLAGS) -o $@ $<

# Target to build all executables
all: alphacash alphacashd

clean:
	rm -f *.o
	rm alphacashd
	rm alphacash
