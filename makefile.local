# Compiler and flags
CXX = g++

# Default build mode
BUILD ?= debug

# Debug mode settings
DEBUGFLAGS = -g
DEBUG_CXXFLAGS = -std=c++11 -O0 -w -Wno-invalid-offsetof -Wformat $(DEBUGFLAGS) \
-I/opt/homebrew/opt/berkeley-db/include \
-I/opt/homebrew/opt//cryptopp/include/cryptopp \
-I/opt/homebrew/opt/boost/include -I/opt/homebrew/opt/boost/include/boost \
-I/opt/homebrew/opt/openssl@3/include \
-I/opt/homebrew/lib/wx/include/osx_cocoa-unicode-3.2 \
-I/opt/homebrew/include/wx-3.2 \
-D_FILE_OFFSET_BITS=64 -DWXUSINGDLL -D__WXMAC__ -D__WXOSX__ -D__WXOSX_COCOA__

# Release mode settings
RELEASEFLAGS = -O3
RELEASE_CXXFLAGS = -std=c++11 -w -Wno-invalid-offsetof -Wformat $(RELEASEFLAGS) \
-I/opt/homebrew/opt/berkeley-db/include \
-I/opt/homebrew/opt//cryptopp/include/cryptopp \
-I/opt/homebrew/opt/boost/include -I/opt/homebrew/opt/boost/include/boost \
-I/opt/homebrew/opt/openssl@3/include \
-I/opt/homebrew/lib/wx/include/osx_cocoa-unicode-3.2 \
-I/opt/homebrew/include/wx-3.2 \
-D_FILE_OFFSET_BITS=64 -DWXUSINGDLL -D__WXMAC__ -D__WXOSX__ -D__WXOSX_COCOA__

# Choose the appropriate flags
ifeq ($(BUILD),debug)
    CXXFLAGS = $(DEBUG_CXXFLAGS)
else ifeq ($(BUILD),release)
    CXXFLAGS = $(RELEASE_CXXFLAGS)
endif

LIBPATHS = -L/usr/lib -L/usr/local/lib -L/opt/homebrew/opt/cryptopp/lib  \
-L/opt/homebrew/opt/berkeley-db/lib \
-L/opt/homebrew/opt/boost/lib -L/opt/homebrew/opt/openssl@3/lib -L/opt/homebrew/lib

LIBS = -Wl,-lboost_system -lboost_filesystem -ldb_cxx -lcryptopp -lcrypto -lssl \
-framework CoreFoundation  -framework IOKit -framework Carbon -framework Cocoa \
-framework QuartzCore -framework AudioToolbox -framework System -framework OpenGL \
-lwx_osx_cocoau_xrc-3.2 -lwx_osx_cocoau_html-3.2 -lwx_osx_cocoau_qa-3.2 \
-lwx_osx_cocoau_core-3.2 -lwx_baseu_xml-3.2 -lwx_baseu_net-3.2 -lwx_baseu-3.2

# Header files
HEADERS = alphautil.h headers.h util.h main.h ui.h uibase.h serialize.h uint256.h key.h \
bignum.h script.h db.h base58.h net.h  market.h rpc.h

# Source files
SRC_FILES = alphautil.cpp util.cpp uibase.cpp ui.cpp script.cpp db.cpp net.cpp main.cpp \
init.cpp rpc.cpp

# Object files
OBJS = $(SRC_FILES:.cpp=.o)


# Target to build the executable
alphacash: $(OBJS)
	$(CXX) $(CXXFLAGS) -o $@ $(LIBPATHS) $(OBJS) $(LIBS)

# Target to build the executable
alphacashd: $(OBJS)
	$(CXX) $(CXXFLAGS) -o $@ $(LIBPATHS) $(OBJS) $(LIBS)

# Pattern rule for object files
%.o: %.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

# Clean up
clean:
	rm -f *.o alphacashd alphacash

